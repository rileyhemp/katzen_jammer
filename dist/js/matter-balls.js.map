{"version":3,"sources":["matter-balls.js"],"names":["init","canvas","document","querySelector","Engine","Matter","World","Bodies","MouseConstraint","engine","create","density","frictionAir","restitution","friction","render","options","showAngleIndicator","isStatic","wireframes","width","height","background","visible","ceiling","rectangle","ground","wallLeft","wallRight","pencil","mouseConstraint","add","world","run"],"mappings":";;AAEA,SAASA,IAAT,GAAe;AAEP;AACJ,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAb,CAHW,CAKX;;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACD,MAApB;AAAA,MACIE,KAAK,GAAGD,MAAM,CAACC,KADnB;AAAA,MAEIC,MAAM,GAAGF,MAAM,CAACE,MAFpB;AAAA,MAGQC,eAAe,GAAGH,MAAM,CAACG,eAHjC,CANW,CAWX;;AACA,MAAIC,MAAM,GAAGL,MAAM,CAACM,MAAP,CAAcT,MAAd,EAAqB;AAC9BU,IAAAA,OAAO,EAAE,MADqB;AAE9BC,IAAAA,WAAW,EAAE,IAFiB;AAG9BC,IAAAA,WAAW,EAAE,GAHiB;AAI9BC,IAAAA,QAAQ,EAAE,IAJoB;AAK9BC,IAAAA,MAAM,EAAE;AACAC,MAAAA,OAAO,EAAE;AACLC,QAAAA,kBAAkB,EAAE,KADf;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,UAAU,EAAE,KAHP;AAILC,QAAAA,KAAK,EAAE,GAJF;AAKLC,QAAAA,MAAM,EAAE,GALH;AAMLC,QAAAA,UAAU,EAAE,MANP;AAOLC,QAAAA,OAAO,EAAE;AAPJ;AADT;AALsB,GAArB,CAAb,CAZW,CA8BX;;AACA,MAAIC,OAAO,GAAGjB,MAAM,CAACkB,SAAP,CAAiB,CAAjB,EAAoB,CAAC,EAArB,EAAyB,GAAzB,EAA8B,EAA9B,EAAkC;AAAEP,IAAAA,QAAQ,EAAE,IAAZ;AAAkBH,IAAAA,MAAM,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX;AAA1B,GAAlC,CAAd;AACA,MAAIG,MAAM,GAAGnB,MAAM,CAACkB,SAAP,CAAiB,EAAjB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,EAA/B,EAAmC;AAAEP,IAAAA,QAAQ,EAAE,IAAZ;AAAkBH,IAAAA,MAAM,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX;AAA1B,GAAnC,CAAb;AACA,MAAII,QAAQ,GAAGpB,MAAM,CAACkB,SAAP,CAAiB,CAAC,EAAlB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC;AAAEP,IAAAA,QAAQ,EAAE,IAAZ;AAAkBH,IAAAA,MAAM,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX;AAA1B,GAApC,CAAf;AACA,MAAIK,SAAS,GAAGrB,MAAM,CAACkB,SAAP,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC;AAAEP,IAAAA,QAAQ,EAAE,IAAZ;AAAkBH,IAAAA,MAAM,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX;AAA1B,GAApC,CAAhB,CAlCW,CAoCX;;AACA,MAAIM,MAAM,GAAGtB,MAAM,CAACkB,SAAP,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC;AAC7CV,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE;AACLM,QAAAA,UAAU,EAAE;AADP;AADL;AADqC,GAApC,CAAb,CArCW,CA6CX;;AACA,MAAIQ,eAAe,GAAGtB,eAAe,CAACE,MAAhB,CAAuBD,MAAvB,CAAtB,CA9CW,CAgDX;;AACAH,EAAAA,KAAK,CAACyB,GAAN,CAAUtB,MAAM,CAACuB,KAAjB,EAAwB,CAACH,MAAD,EAASL,OAAT,EAAkBE,MAAlB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CE,eAA/C,CAAxB,EAjDW,CAmDX;;AACA1B,EAAAA,MAAM,CAAC6B,GAAP,CAAWxB,MAAX;AAEH;;AAEDT,IAAI","sourcesContent":["\r\n\r\nfunction init(){\r\n    \r\n        // Fetch the HTML element\r\n    let canvas = document.querySelector(\".canvas\");\r\n    \r\n    // Assign Matter.js aliases to letiables for easier usage\r\n    let Engine = Matter.Engine,  \t\r\n        World = Matter.World,\r\n        Bodies = Matter.Bodies,\r\n            MouseConstraint = Matter.MouseConstraint;\r\n\r\n    // Create the simulation engine, describe parameters and sets the rendering options\r\n    let engine = Engine.create(canvas,{\r\n        density: 0.0005,\r\n        frictionAir: 0.06,\r\n        restitution: 0.3,\r\n        friction: 0.06,\r\n        render: {\r\n                options: {\r\n                    showAngleIndicator: false,\r\n                    isStatic: true,\r\n                    wireframes: false,\r\n                    width: 360,\r\n                    height: 640,     \r\n                    background: 'blue',\r\n                    visible: false\r\n                }\r\n            }\r\n        });\r\n\r\n    // Static bodies - walls\r\n    let ceiling = Bodies.rectangle(0, -28, 720, 60, { isStatic: true, render: { visible: false} }); \r\n    let ground = Bodies.rectangle(40, 650, 720, 60, { isStatic: true, render: { visible: false} }); \r\n    let wallLeft = Bodies.rectangle(-28, 310, 60, 650, { isStatic: true, render: { visible: false} }); \r\n    let wallRight = Bodies.rectangle(388, 310, 60, 650, { isStatic: true, render: { visible: false} }); \r\n    \r\n    // Dynamic bodies\r\n    let pencil = Bodies.rectangle(130, 200, 39, 227, {\r\n        render: {\r\n            options: {\r\n                background: 'red'\r\n            }\r\n            }\r\n        });\r\n    \r\n    // Mouse constraint (touching and moving bodies)\r\n    let mouseConstraint = MouseConstraint.create(engine);  \r\n    \r\n    // add all of the bodies to the world\r\n    World.add(engine.world, [pencil, ceiling, ground, wallLeft, wallRight, mouseConstraint]);\r\n\r\n    // Fire up the 2D engine\r\n    Engine.run(engine);\r\n        \r\n}\r\n\r\ninit()\r\n"],"file":"matter-balls.js"}